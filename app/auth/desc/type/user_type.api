syntax = "v1"

import (
	"base_type.api"
)

// api/user.api
type (
	CreateUserReq {
		Username string  `json:"username"`
		Password string  `json:"password"`
		Nickname string  `json:"nickname,optional"`
		Email    string  `json:"email,optional"`
		Phone    string  `json:"phone,optional"`
		RoleIds  []int64 `json:"roleIds,optional"`
	}

	UpdateUserReq {
		Id       int64   `path:"id"`
		Nickname string  `json:"nickname,optional"`
		Email    string  `json:"email,optional"`
		Phone    string  `json:"phone,optional"`
		Status   int8    `json:"status,optional"`
		RoleIds  []int64 `json:"roleIds,optional"`
	}

	UserListReq {
		Page     int    `form:"page,default=1"`
		PageSize int    `form:"pageSize,default=20"`
		Username string `form:"username,optional"`
		Phone    string `form:"phone,optional"`
		Status   int8   `form:"status,optional"`
	}

	UserListResp {
		Total int64      `json:"total"`
		List  []UserInfo `json:"list"`
	}

	UserInfo {
		Id        int64    `json:"id"`
		Username  string   `json:"username"`
		Nickname  string   `json:"nickname"`
		Email     string   `json:"email"`
		Phone     string   `json:"phone"`
		Status    int8     `json:"status"`
		Roles     []string `json:"roles"`
		CreatedAt string   `json:"createdAt"`
	}
)

@server (
	prefix: /auth/api/v1/user
	group: user
	middleware: Auth
)
service auth-api {
	@doc "创建用户"
	@handler Create
	post /create (CreateUserReq) returns (UserInfo)

	@doc "更新用户"
	@handler Update
	post /update (UpdateUserReq) returns (UserInfo)

	@doc "获取用户列表"
	@handler List
	post /list (UserListReq) returns (UserListResp)

	@doc "删除用户"
	@handler Delete
	post /delete (IDRequest) returns (bool)

	@doc "获取用户详情"
	@handler Detail
	post /detail returns (UserInfo)
}