// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type CreateRoleReq struct {
	Name          string  `json:"name" validate:"required"`
	Code          string  `json:"code" validate:"required"`
	Description   string  `json:"description,optional"`
	PermissionIds []int64 `json:"permissionIds,optional"`
}

type CreateUserReq struct {
	Username string  `json:"username"`
	Password string  `json:"password"`
	Nickname string  `json:"nickname,optional"`
	Email    string  `json:"email,optional"`
	Phone    string  `json:"phone,optional"`
	RoleIds  []int64 `json:"roleIds,optional"`
}

type IDRequest struct {
	ID int `json:"id"` // ID
}

type LoginReq struct {
	Username string `json:"username" validate:"required"`
	Password string `json:"password" validate:"required"`
}

type LoginResp struct {
	AccessToken  string `json:"accessToken"`
	TokenType    string `json:"tokenType"`
	ExpiresIn    int64  `json:"expiresIn"`
	RefreshToken string `json:"refreshToken,optional"`
}

type PageJsonRequest struct {
	Current  int32 `json:"current"`   // 当前页
	PageSize int32 `json:"page_size"` // 每页大小
}

type PageRequest struct {
	Current  int32 `json:"current"`   // 当前页
	PageSize int32 `json:"page_size"` // 每页大小
}

type PageResponse struct {
	Total           int32 `json:"total"`             // 总数
	PageSize        int32 `json:"page_size"`         // 当前页大小
	RequestPageSize int32 `json:"request_page_size"` // 请求页大小
	Current         int32 `json:"current"`           // 当前页
}

type PermissionInfo struct {
	Id          int64            `json:"id"`
	Name        string           `json:"name"`
	Code        string           `json:"code"`
	Type        int              `json:"type"`
	Path        string           `json:"path"`
	Action      int              `json:"action"`
	ParentId    int64            `json:"parentId"`
	Description string           `json:"description"`
	Status      int8             `json:"status"`
	Children    []PermissionInfo `json:"children,optional"`
}

type PermissionTreeResp struct {
	List []PermissionInfo `json:"list"`
}

type RefreshTokenReq struct {
	RefreshToken string `json:"refreshToken" validate:"required"`
}

type RoleInfo struct {
	Id          int64    `json:"id"`
	Name        string   `json:"name"`
	Code        string   `json:"code"`
	Description string   `json:"description"`
	Status      int8     `json:"status"`
	Permissions []string `json:"permissions"`
	CreatedAt   string   `json:"createdAt"`
}

type RoleListReq struct {
	Page     int    `form:"page,default=1"`
	PageSize int    `form:"pageSize,default=20"`
	Name     string `form:"name,optional"`
	Status   int8   `form:"status,optional"`
}

type RoleListResp struct {
	Total int64      `json:"total"`
	List  []RoleInfo `json:"list"`
}

type TimeRange struct {
	StartTime string `form:"start_time,optional"` // 开始时间
	EndTime   string `form:"end_time,optional"`   // 结束时间
}

type UpdateRoleReq struct {
	Name          string  `json:"name,optional"`
	Description   string  `json:"description,optional"`
	Status        int8    `json:"status,optional"`
	PermissionIds []int64 `json:"permissionIds,optional"`
}

type UpdateUserReq struct {
	Id       int64   `path:"id"`
	Nickname string  `json:"nickname,optional"`
	Email    string  `json:"email,optional"`
	Phone    string  `json:"phone,optional"`
	Status   int8    `json:"status,optional"`
	RoleIds  []int64 `json:"roleIds,optional"`
}

type UserInfo struct {
	Id        int64    `json:"id"`
	Username  string   `json:"username"`
	Nickname  string   `json:"nickname"`
	Email     string   `json:"email"`
	Phone     string   `json:"phone"`
	Status    int8     `json:"status"`
	Roles     []string `json:"roles"`
	CreatedAt string   `json:"createdAt"`
}

type UserInfoResp struct {
	Id          int64    `json:"id"`
	Username    string   `json:"username"`
	Nickname    string   `json:"nickname"`
	Avatar      string   `json:"avatar"`
	Email       string   `json:"email"`
	Phone       string   `json:"phone"`
	Roles       []string `json:"roles"`
	Permissions []string `json:"permissions"`
}

type UserListReq struct {
	Page     int    `form:"page,default=1"`
	PageSize int    `form:"pageSize,default=20"`
	Username string `form:"username,optional"`
	Phone    string `form:"phone,optional"`
	Status   int8   `form:"status,optional"`
}

type UserListResp struct {
	Total int64      `json:"total"`
	List  []UserInfo `json:"list"`
}
