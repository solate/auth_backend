// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// PermissionsColumns holds the columns for the "permissions" table.
	PermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Comment: "权限名称"},
		{Name: "code", Type: field.TypeString, Unique: true, Comment: "权限编码"},
		{Name: "type", Type: field.TypeInt, Comment: "类型 1:菜单menu 2:按钮buttn 3:接口 api"},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "路径"},
		{Name: "action", Type: field.TypeInt, Nullable: true, Comment: "操作类型: 1:all 2:read 3:write", Default: 1},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true, Comment: "父级ID"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "描述"},
		{Name: "status", Type: field.TypeInt8, Comment: "状态 1:启用 2:禁用", Default: 1},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// PermissionsTable holds the schema information for the "permissions" table.
	PermissionsTable = &schema.Table{
		Name:       "permissions",
		Comment:    "权限",
		Columns:    PermissionsColumns,
		PrimaryKey: []*schema.Column{PermissionsColumns[0]},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Comment: "角色名"},
		{Name: "code", Type: field.TypeString, Unique: true, Comment: "角色编码"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "角色描述"},
		{Name: "status", Type: field.TypeInt8, Comment: "状态: 1:启用, 2:禁用", Default: 1},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间"},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:       "roles",
		Comment:    "角色",
		Columns:    RolesColumns,
		PrimaryKey: []*schema.Column{RolesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "role_code",
				Unique:  true,
				Columns: []*schema.Column{RolesColumns[2]},
			},
		},
	}
	// RolePermissionsColumns holds the columns for the "role_permissions" table.
	RolePermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "role_id", Type: field.TypeInt},
		{Name: "permission_id", Type: field.TypeInt},
	}
	// RolePermissionsTable holds the schema information for the "role_permissions" table.
	RolePermissionsTable = &schema.Table{
		Name:       "role_permissions",
		Columns:    RolePermissionsColumns,
		PrimaryKey: []*schema.Column{RolePermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_permissions_roles_role",
				Columns:    []*schema.Column{RolePermissionsColumns[2]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "role_permissions_permissions_permission",
				Columns:    []*schema.Column{RolePermissionsColumns[3]},
				RefColumns: []*schema.Column{PermissionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "rolepermission_role_id_permission_id",
				Unique:  true,
				Columns: []*schema.Column{RolePermissionsColumns[2], RolePermissionsColumns[3]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true, Comment: "用户名"},
		{Name: "password", Type: field.TypeString, Comment: "密码"},
		{Name: "nickname", Type: field.TypeString, Nullable: true, Comment: "昵称"},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Comment: "头像"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "邮箱"},
		{Name: "phone", Type: field.TypeString, Unique: true, Nullable: true, Comment: "手机号"},
		{Name: "status", Type: field.TypeInt8, Comment: "状态: 1:启用, 2:禁用", Default: 1},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Comment:    "用户",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_username",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[1]},
			},
			{
				Name:    "user_phone",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[6]},
			},
		},
	}
	// UserRolesColumns holds the columns for the "user_roles" table.
	UserRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "role_id", Type: field.TypeInt},
	}
	// UserRolesTable holds the schema information for the "user_roles" table.
	UserRolesTable = &schema.Table{
		Name:       "user_roles",
		Columns:    UserRolesColumns,
		PrimaryKey: []*schema.Column{UserRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_roles_users_user",
				Columns:    []*schema.Column{UserRolesColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "user_roles_roles_role",
				Columns:    []*schema.Column{UserRolesColumns[3]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userrole_user_id_role_id",
				Unique:  true,
				Columns: []*schema.Column{UserRolesColumns[2], UserRolesColumns[3]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		PermissionsTable,
		RolesTable,
		RolePermissionsTable,
		UsersTable,
		UserRolesTable,
	}
)

func init() {
	PermissionsTable.Annotation = &entsql.Annotation{
		Table: "permissions",
	}
	RolesTable.Annotation = &entsql.Annotation{
		Table: "roles",
	}
	RolePermissionsTable.ForeignKeys[0].RefTable = RolesTable
	RolePermissionsTable.ForeignKeys[1].RefTable = PermissionsTable
	UsersTable.Annotation = &entsql.Annotation{
		Table: "users",
	}
	UserRolesTable.ForeignKeys[0].RefTable = UsersTable
	UserRolesTable.ForeignKeys[1].RefTable = RolesTable
}
